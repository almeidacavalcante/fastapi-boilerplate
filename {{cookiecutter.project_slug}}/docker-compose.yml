version: '3.7'
services:

  {% if cookiecutter.nginx == 'yes' %}
  nginx:
    image: nginx:1.17
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - {{cookiecutter.port}}:80
    depends_on:
      - backend
      - frontend
  {% endif %}

  {% if cookiecutter.redis == 'yes' %}
  redis:
    image: redis
    ports:
      - {{cookiecutter.redis_port}}:6379
  {% endif %}

  postgres:
    image: postgres:12
    restart: always
    environment:
      POSTGRES_USER: {{cookiecutter.postgres_user}}
      POSTGRES_PASSWORD: {{cookiecutter.postgres_password}}
    ports:
      - {{cookiecutter.postgres_port}}:5432
    volumes:
      - db-data:/var/lib/postgresql/data:cached

  {% if cookiecutter.worker == 'yes' %}
  worker:
    build:
      context: backend
      dockerfile: Dockerfile
    command: celery --app app.tasks worker --loglevel=DEBUG -Q main-queue -c 1

  flower:
    image: mher/flower
    command: celery flower --broker=redis://redis:6379/0 --port=5555
    ports:
        - 5555:5555
    depends_on:
      - "redis"
  {% endif %}

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    command: python app/main.py
    tty: true
    volumes:
      - ./backend:/app/:cached
      - ./.docker/.ipython:/root/.ipython:cached
    environment:
      PYTHONPATH: .
      DATABASE_URL: 'postgresql://{{cookiecutter.postgres_user}}:{{cookiecutter.postgres_password}}@postgres:5432/{{cookiecutter.postgres_user}}'
    depends_on:
      - "postgres"


volumes:
  db-data:
